{"version":3,"sources":["api/bar/bar.controller.js"],"names":["index","show","create","upsert","upsertVisitor","patch","destroy","search","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","findOne","yelpId","bar","visitors","user_id","visitorsCount","idx","indexOf","splice","push","length","console","info","yelp","consumer_key","consumer_secret","token","token_secret","term","location","data","yelpIds","businesses","forEach","d","$in","docs","mapData","map","user","imgoing"],"mappings":"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","file":"bar.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/bars              ->  index\n * POST    /api/bars              ->  create\n * GET     /api/bars/:id          ->  show\n * PUT     /api/bars/:id          ->  upsert\n * PATCH   /api/bars/:id          ->  patch\n * DELETE  /api/bars/:id          ->  destroy\n */\n\n'use strict';\n\n\nimport jsonpatch from 'fast-json-patch';\nimport Bar from './bar.model';\nimport _ from 'lodash';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function (entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Bars\nexport function index(req, res) {\n  return Bar.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Bar from the DB\nexport function show(req, res) {\n  return Bar.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Bar in the DB\nexport function create(req, res) {\n  return Bar.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Bar in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Bar.findOneAndUpdate({_id: req.params.id}, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\nexport function upsertVisitor(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Bar.findOne({yelpId: req.params.id}).exec().then(\n    function (bar) {\n      if (!bar) {//make a new one\n        return Bar.create({\n          yelpId: req.params.id,\n          visitors: [req.params.user_id],\n          visitorsCount: 1\n        }).then(respondWithResult(res, 201)).catch(handleError(res));\n      } else {//update existing one\n\n        const idx = _.indexOf(bar.visitors, req.params.user_id);\n        if (idx >= 0) {\n          bar.visitors.splice(idx, 1);\n        } else {\n          bar.visitors.push(req.params.user_id);\n        }\n        bar.visitorsCount = bar.visitors.length;\n        console.info(bar);\n        return Bar.findOneAndUpdate({_id: bar._id}, bar, {\n          upsert: true,\n          setDefaultsOnInsert: true,\n          runValidators: true\n        }).exec()\n          .then(respondWithResult(res))\n          .catch(handleError(res));\n      }\n    }).catch(handleError(res));\n\n}\n\n// Updates an existing Bar in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Bar.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Bar from the DB\nexport function destroy(req, res) {\n  return Bar.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n\nimport Yelp from 'yelp';\n\nconst yelp = new Yelp({\n  consumer_key: 'Hmi1piXR8FWgUpewtGDJAA',\n  consumer_secret: '1Ud-UFlihGw5c-anDShdR82qtao',\n  token: 'AtCt_0hOZrv7HmhbVefKSN2fV2DyETH7',\n  token_secret: 'dvy-aJg-M-EscbX7gOgT5ENsgCI',\n});\n\n\nexport function search(req, res) {\n  yelp.search({term: 'bar', location: req.params.term}).then(function (data) {\n\n    let yelpIds = [];\n\n    data.businesses && data.businesses.forEach(function (d) {\n      yelpIds.push(d.id);\n    });\n\n    Bar.find({\n      'yelpId': {$in: yelpIds}\n    }, function (err, docs) {\n      if (err) {\n        return res.json(data);\n      } else {\n        let mapData = {};\n        docs.map(function (d) {\n          return mapData[d.yelpId] = d;\n        });\n\n        data.businesses.forEach(function (d) {\n          d.visitors = mapData[d.id] ? mapData[d.id].visitors : [];\n          d.visitorsCount = mapData[d.id] ? mapData[d.id].visitorsCount : 0;\n          if (req.user && req.user._id) {\n            d.imgoing = (_.indexOf(d.visitors, req.user._id) >= 0);\n          }\n        });\n\n        return res.json(data);\n      }\n    });\n  }).catch(handleError(res));\n}\n"]}