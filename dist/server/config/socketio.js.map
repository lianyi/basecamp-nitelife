{"version":3,"sources":["config/socketio.js"],"names":["socketio","on","socket","address","request","connection","remoteAddress","remotePort","connectedAt","Date","log","data","nsp","name","onDisconnect","onConnect","require","register"],"mappings":"AAAA;;;AAGA;;AAEA;;AAEA;;;;;;;;;;kBAee,UAASA,QAAT,EAAmB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,WAASC,EAAT,CAAY,YAAZ,EAA0B,UAASC,MAAT,EAAiB;AACzCA,WAAOC,OAAP,GAAoBD,OAAOE,OAAP,CAAeC,UAAf,CAA0BC,aAA9C,SAA+DJ,OAAOE,OAAP,CAAeC,UAAf,CAA0BE,UAAzF;;AAEAL,WAAOM,WAAP,GAAqB,IAAIC,IAAJ,EAArB;;AAEAP,WAAOQ,GAAP,GAAa,YAAkB;AAAA;;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AAC7B,2BAAQD,GAAR,gCAAwBR,OAAOU,GAAP,CAAWC,IAAnC,UAA4CX,OAAOC,OAAnD,eAAkEQ,IAAlE;AACD,KAFD;;AAIA;AACAT,WAAOD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5Ba,mBAAaZ,MAAb;AACAA,aAAOQ,GAAP,CAAW,cAAX;AACD,KAHD;;AAKA;AACAK,cAAUb,MAAV;AACAA,WAAOQ,GAAP,CAAW,WAAX;AACD,GAlBD;AAmBD,C;;;;AAjDD,SAASI,YAAT,GAAsB,UAAY,CAAE;;AAEpC;AACA,SAASC,SAAT,CAAmBb,MAAnB,EAA2B;AACzB;AACAA,SAAOD,EAAP,CAAU,MAAV,EAAkB,gBAAQ;AACxBC,WAAOQ,GAAP,CAAW,yBAAeC,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAX;AACD,GAFD;;AAIA;AACAK,UAAQ,uBAAR,EAAiCC,QAAjC,CAA0Cf,MAA1C;AACAc,UAAQ,2BAAR,EAAqCC,QAArC,CAA8Cf,MAA9C;AACD","file":"socketio.js","sourcesContent":["/**\r\n * Socket.io configuration\r\n */\r\n'use strict';\r\n\r\n// import config from './environment';\r\n\r\n// When the user disconnects.. perform this\r\nfunction onDisconnect(/*socket*/) {}\r\n\r\n// When the user connects.. perform this\r\nfunction onConnect(socket) {\r\n  // When the client emits 'info', this listens and executes\r\n  socket.on('info', data => {\r\n    socket.log(JSON.stringify(data, null, 2));\r\n  });\r\n\r\n  // Insert sockets below\r\n  require('../api/bar/bar.socket').register(socket);\r\n  require('../api/thing/thing.socket').register(socket);\r\n}\r\n\r\nexport default function(socketio) {\r\n  // socket.io (v1.x.x) is powered by debug.\r\n  // In order to see all the debug output, set DEBUG (in server/config/local.env.js) to including the desired scope.\r\n  //\r\n  // ex: DEBUG: \"http*,socket.io:socket\"\r\n\r\n  // We can authenticate socket.io users and access their token through socket.decoded_token\r\n  //\r\n  // 1. You will need to send the token in `client/components/socket/socket.service.js`\r\n  //\r\n  // 2. Require authentication here:\r\n  // socketio.use(require('socketio-jwt').authorize({\r\n  //   secret: config.secrets.session,\r\n  //   handshake: true\r\n  // }));\r\n\r\n  socketio.on('connection', function(socket) {\r\n    socket.address = `${socket.request.connection.remoteAddress}:${socket.request.connection.remotePort}`;\r\n\r\n    socket.connectedAt = new Date();\r\n\r\n    socket.log = function(...data) {\r\n      console.log(`SocketIO ${socket.nsp.name} [${socket.address}]`, ...data);\r\n    };\r\n\r\n    // Call onDisconnect.\r\n    socket.on('disconnect', () => {\r\n      onDisconnect(socket);\r\n      socket.log('DISCONNECTED');\r\n    });\r\n\r\n    // Call onConnect.\r\n    onConnect(socket);\r\n    socket.log('CONNECTED');\r\n  });\r\n}\r\n"]}