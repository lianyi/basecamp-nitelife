{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","hasRole","signToken","setTokenCookie","validateJwt","secret","secrets","session","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","cookies","token","findById","user","_id","exec","then","status","end","catch","err","roleRequired","Error","meetsRequirements","userRoles","indexOf","role","send","id","sign","expiresIn","cookie","redirect"],"mappings":"AAAA;;;;;QAegBA,e,GAAAA,e;QA+BAC,O,GAAAA,O;QAmBAC,S,GAAAA,S;QASAC,c,GAAAA,c;;AAzEhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIC,cAAc,0BAAW;AAC3BC,UAAQ,sBAAOC,OAAP,CAAeC;AADI,CAAX,CAAlB;;AAIA;;;;AAIO,SAASP,eAAT,GAA2B;AAChC,SAAO;AACL;AADK,GAEJQ,GAFI,CAEA,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5B;AACA,QAAGF,IAAIG,KAAJ,IAAaH,IAAIG,KAAJ,CAAUC,cAAV,CAAyB,cAAzB,CAAhB,EAA0D;AACxDJ,UAAIK,OAAJ,CAAYC,aAAZ,eAAsCN,IAAIG,KAAJ,CAAUI,YAAhD;AACD;AACF;AACC,QAAGP,IAAIG,KAAJ,IAAa,OAAOH,IAAIK,OAAJ,CAAYC,aAAnB,KAAqC,WAArD,EAAkE;AAChEN,UAAIK,OAAJ,CAAYC,aAAZ,eAAsCN,IAAIQ,OAAJ,CAAYC,KAAlD;AACD;AACDd,gBAAYK,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB;AACD,GAZI;AAaL;AAbK,GAcJH,GAdI,CAcA,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5B,mBAAKQ,QAAL,CAAcV,IAAIW,IAAJ,CAASC,GAAvB,EAA4BC,IAA5B,GACGC,IADH,CACQ,gBAAQ;AACZ,UAAG,CAACH,IAAJ,EAAU;AACR,eAAOV,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACD;AACDhB,UAAIW,IAAJ,GAAWA,IAAX;AACAT;AACD,KAPH,EAQGe,KARH,CAQS;AAAA,aAAOf,KAAKgB,GAAL,CAAP;AAAA,KART;AASD,GAxBI,CAAP;AAyBD;;AAED;;;AAGO,SAAS1B,OAAT,CAAiB2B,YAAjB,EAA+B;AACpC,MAAG,CAACA,YAAJ,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,SAAO,sCACJrB,GADI,CACAR,iBADA,EAEJQ,GAFI,CAEA,SAASsB,iBAAT,CAA2BrB,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AAC9C,QAAG,sBAAOoB,SAAP,CAAiBC,OAAjB,CAAyBvB,IAAIW,IAAJ,CAASa,IAAlC,KAA2C,sBAAOF,SAAP,CAAiBC,OAAjB,CAAyBJ,YAAzB,CAA9C,EAAsF;AACpF,aAAOjB,MAAP;AACD,KAFD,MAEO;AACL,aAAOD,IAAIc,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB,WAArB,CAAP;AACD;AACF,GARI,CAAP;AASD;;AAED;;;AAGO,SAAShC,SAAT,CAAmBiC,EAAnB,EAAuBF,IAAvB,EAA6B;AAClC,SAAO,uBAAIG,IAAJ,CAAS,EAAEf,KAAKc,EAAP,EAAWF,UAAX,EAAT,EAA4B,sBAAO3B,OAAP,CAAeC,OAA3C,EAAoD;AACzD8B,eAAW,KAAK,EAAL,GAAU;AADoC,GAApD,CAAP;AAGD;;AAED;;;AAGO,SAASlC,cAAT,CAAwBM,GAAxB,EAA6BC,GAA7B,EAAkC;AACvC,MAAG,CAACD,IAAIW,IAAR,EAAc;AACZ,WAAOV,IAAIc,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqB,wDAArB,CAAP;AACD;AACD,MAAIhB,QAAQhB,UAAUO,IAAIW,IAAJ,CAASC,GAAnB,EAAwBZ,IAAIW,IAAJ,CAASa,IAAjC,CAAZ;AACAvB,MAAI4B,MAAJ,CAAW,OAAX,EAAoBpB,KAApB;AACAR,MAAI6B,QAAJ,CAAa,GAAb;AACD","file":"auth.service.js","sourcesContent":["'use strict';\r\nimport config from '../config/environment';\r\nimport jwt from 'jsonwebtoken';\r\nimport expressJwt from 'express-jwt';\r\nimport compose from 'composable-middleware';\r\nimport User from '../api/user/user.model';\r\n\r\nvar validateJwt = expressJwt({\r\n  secret: config.secrets.session\r\n});\r\n\r\n/**\r\n * Attaches the user object to the request if authenticated\r\n * Otherwise returns 403\r\n */\r\nexport function isAuthenticated() {\r\n  return compose()\r\n    // Validate jwt\r\n    .use(function(req, res, next) {\r\n      // allow access_token to be passed through query parameter as well\r\n      if(req.query && req.query.hasOwnProperty('access_token')) {\r\n        req.headers.authorization = `Bearer ${req.query.access_token}`;\r\n      }\r\n     // IE11 forgets to set Authorization header sometimes. Pull from cookie instead.\r\n      if(req.query && typeof req.headers.authorization === 'undefined') {\r\n        req.headers.authorization = `Bearer ${req.cookies.token}`;\r\n      }\r\n      validateJwt(req, res, next);\r\n    })\r\n    // Attach user to request\r\n    .use(function(req, res, next) {\r\n      User.findById(req.user._id).exec()\r\n        .then(user => {\r\n          if(!user) {\r\n            return res.status(401).end();\r\n          }\r\n          req.user = user;\r\n          next();\r\n        })\r\n        .catch(err => next(err));\r\n    });\r\n}\r\n\r\n/**\r\n * Checks if the user role meets the minimum requirements of the route\r\n */\r\nexport function hasRole(roleRequired) {\r\n  if(!roleRequired) {\r\n    throw new Error('Required role needs to be set');\r\n  }\r\n\r\n  return compose()\r\n    .use(isAuthenticated())\r\n    .use(function meetsRequirements(req, res, next) {\r\n      if(config.userRoles.indexOf(req.user.role) >= config.userRoles.indexOf(roleRequired)) {\r\n        return next();\r\n      } else {\r\n        return res.status(403).send('Forbidden');\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Returns a jwt token signed by the app secret\r\n */\r\nexport function signToken(id, role) {\r\n  return jwt.sign({ _id: id, role }, config.secrets.session, {\r\n    expiresIn: 60 * 60 * 5\r\n  });\r\n}\r\n\r\n/**\r\n * Set token cookie directly for oAuth strategies\r\n */\r\nexport function setTokenCookie(req, res) {\r\n  if(!req.user) {\r\n    return res.status(404).send('It looks like you aren\\'t logged in, please try again.');\r\n  }\r\n  var token = signToken(req.user._id, req.user.role);\r\n  res.cookie('token', token);\r\n  res.redirect('/');\r\n}\r\n"]}